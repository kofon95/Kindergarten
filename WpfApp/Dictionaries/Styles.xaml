<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:WpfApp.View.Converter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

	<Style x:Key="PlaceHolderTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid>
						<TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 Panel.ZIndex="2" />
						<TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 Panel.ZIndex="1">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Setter Property="Foreground" Value="Transparent"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
											<Setter Property="Foreground" Value="LightGray"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="ReloadButton" TargetType="Button">
		<Style.Resources>
			<Color x:Key="HoverColor">#1093CB</Color>
			<Color x:Key="LoadingColor">Red</Color>
			<Color x:Key="DoneColor">#29AB29</Color>
		</Style.Resources>
		<Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform Angle="0"/>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Viewbox>
						<Border Background="Transparent" CornerRadius="50">
							<Path RenderTransformOrigin="0.5 0.5" Fill="{TemplateBinding Background}">
								<Path.Data>
								<GeometryGroup>
									<StaticResource ResourceKey="ReloadData" />
								</GeometryGroup>
							</Path.Data>
							</Path>
						</Border>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
																	To="{StaticResource HoverColor}"
																	Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
																	Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<Trigger Property="Button.Tag">
				<Trigger.Value>
					<system:Boolean>True</system:Boolean>
				</Trigger.Value>

				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever">
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
											 Duration="0:0:1"
											 From="0" To="360"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
							                 Duration="0:0:0" To="360" BeginTime="{x:Null}"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="Button.Tag">
				<Trigger.Value>
					<system:Boolean>True</system:Boolean>
				</Trigger.Value>

				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											Duration="0:0:0.1"
											To="{StaticResource LoadingColor}"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											Duration="0:0:0" To="{StaticResource DoneColor}"/>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											BeginTime="0:0:1" Duration="0:0:0.1"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>


	<Style x:Key="DetailsButton" TargetType="Button">
		<Setter Property="Button.Template">
			<Setter.Value>
				<ControlTemplate>
					<Viewbox>
						<Border Name="border" Background="#18808080">
							<Path Name="path" Data="{StaticResource DetailsData}" Fill="Black"/>
						</Border>
					</Viewbox>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="Gray"/>
							<Setter TargetName="path" Property="Path.Fill" Value="White"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="ButtonControlTemplate" TargetType="ButtonBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
			<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Button.IsDefaulted">
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsMouseOver">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFBEE6FD</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF3C7FB1</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="ButtonBase.IsPressed">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFC4E5F6</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF2C628B</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFBCDDEE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF245A83</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFF4F4F4</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFADB2B5</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="TextElement.Foreground" TargetName="contentPresenter">
					<Setter.Value>
						<SolidColorBrush>#FF838383</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

</ResourceDictionary>