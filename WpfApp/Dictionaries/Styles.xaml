<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:WpfApp.View.Converter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
	
	<ResourceDictionary.MergedDictionaries>
		
		<!--Themes-->

		<!-- IG Theme -->
		<!--<ResourceDictionary Source="../Themes/IG/IG.MSControls.Core.Implicit.xaml" />
		<ResourceDictionary Source="../Themes/IG/IG.MSControls.Toolkit.Implicit.xaml" />-->

		<!-- Metro Theme -->
		<ResourceDictionary Source="../Themes/Metro/Metro.MSControls.Core.Implicit.xaml" />
		<ResourceDictionary Source="../Themes/Metro/Metro.MSControls.Toolkit.Implicit.xaml" />

		<!-- MetroDark Theme -->
		<!--<ResourceDictionary Source="../Themes/MetroDark/MetroDark.MSControls.Core.Implicit.xaml" />
		<ResourceDictionary Source="../Themes/MetroDark/MetroDark.MSControls.Toolkit.Implicit.xaml" />-->

		<!-- Office2010Blue Theme -->
		<!--<ResourceDictionary Source="../Themes/Office2010Blue/Office2010Blue.MSControls.Core.Implicit.xaml" />
		<ResourceDictionary Source="../Themes/Office2010Blue/Office2010Blue.MSControls.Toolkit.Implicit.xaml" />-->

		<!-- Office2013 Theme -->
		<!--<ResourceDictionary Source="../Themes/Office2013/Office2013.MSControls.Core.Implicit.xaml" />
		<ResourceDictionary Source="../Themes/Office2013/Office2013.MSControls.Toolkit.Implicit.xaml" />-->

		<ResourceDictionary Source="TabItem.xaml"/>
	</ResourceDictionary.MergedDictionaries>





	<Style x:Key="PlaceHolderTextBoxOld" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid>
						<TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 MaxLength="{TemplateBinding MaxLength}"
                                 Panel.ZIndex="2" />
						<TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 Panel.ZIndex="1">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Setter Property="Foreground" Value="Transparent"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
											<Setter Property="Foreground" Value="LightGray"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="PlaceHolderTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid>
						<TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 MaxLength="{TemplateBinding MaxLength}"
                                 Panel.ZIndex="2" Style="{x:Null}">
						</TextBox>
						<TextBox Name="PlaceTextBox" Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}"
								 Padding="{TemplateBinding Padding}"
								 VerticalAlignment="{TemplateBinding VerticalAlignment}"
								 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								 Panel.ZIndex="1">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Setter Property="Foreground" Value="Transparent"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
											<Setter Property="Foreground" Value="LightGray"/>
										</DataTrigger>
										<MultiDataTrigger>
											<MultiDataTrigger.Conditions>
												<Condition Binding="{Binding Source={x:Reference textSource}, Path=IsMouseOver}" Value="True"/>
												<Condition Binding="{Binding Source={x:Reference textSource}, Path=Text}" Value=""/>
											</MultiDataTrigger.Conditions>
											<Setter Property="Foreground" Value="#E5E5E5"/>
											<Setter Property="Effect">
												<Setter.Value>
													<BlurEffect Radius="0" KernelType="Gaussian"/>
												</Setter.Value>
											</Setter>
										</MultiDataTrigger>
									</Style.Triggers>
								</Style>
							</TextBox.Style>
						</TextBox>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="ReloadButton" TargetType="Button">
		<Style.Resources>
			<Color x:Key="HoverColor">#1093CB</Color>
			<Color x:Key="LoadingColor">Red</Color>
			<Color x:Key="DoneColor">#29AB29</Color>
		</Style.Resources>
		<Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform Angle="0"/>
			</Setter.Value>
		</Setter>
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Viewbox>
						<Border Background="Transparent" CornerRadius="50">
							<Path RenderTransformOrigin="0.5 0.5" Fill="{TemplateBinding Background}">
								<Path.Data>
								<GeometryGroup>
									<StaticResource ResourceKey="ReloadData" />
								</GeometryGroup>
							</Path.Data>
							</Path>
						</Border>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
																	To="{StaticResource HoverColor}"
																	Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
																	Duration="0:0:0.2"/>
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			<Trigger Property="Button.Tag">
				<Trigger.Value>
					<system:Boolean>True</system:Boolean>
				</Trigger.Value>

				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever">
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
											 Duration="0:0:1"
											 From="0" To="360"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
							                 Duration="0:0:0" To="360" BeginTime="{x:Null}"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
			<Trigger Property="Button.Tag">
				<Trigger.Value>
					<system:Boolean>True</system:Boolean>
				</Trigger.Value>

				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											Duration="0:0:0.1"
											To="{StaticResource LoadingColor}"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											Duration="0:0:0" To="{StaticResource DoneColor}"/>
							<ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)"
											BeginTime="0:0:1" Duration="0:0:0.1"/>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>


	<Style x:Key="DetailsButton" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Viewbox>
						<Border Name="border" Background="#18808080">
							<Path Name="path" Data="{StaticResource DetailsData}" Fill="Black"/>
						</Border>
					</Viewbox>
					
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Border.Background" Value="Gray"/>
							<Setter TargetName="path" Property="Path.Fill" Value="White"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<ControlTemplate x:Key="ButtonControlTemplate" TargetType="ButtonBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
		<Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
			<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Button.IsDefaulted">
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsMouseOver">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFBEE6FD</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF3C7FB1</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="ButtonBase.IsPressed">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFC4E5F6</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF2C628B</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="ToggleButton.IsChecked">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFBCDDEE</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FF245A83</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>True</s:Boolean>
				</Trigger.Value>
			</Trigger>
			<Trigger Property="UIElement.IsEnabled">
				<Setter Property="Panel.Background" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFF4F4F4</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Border.BorderBrush" TargetName="border">
					<Setter.Value>
						<SolidColorBrush>#FFADB2B5</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="TextElement.Foreground" TargetName="contentPresenter">
					<Setter.Value>
						<SolidColorBrush>#FF838383</SolidColorBrush>
					</Setter.Value>
				</Setter>
				<Trigger.Value>
					<s:Boolean>False</s:Boolean>
				</Trigger.Value>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	

	<Style x:Key="ClosingButton">
		<Setter Property="Button.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Viewbox>
						<Border Background="Black" Padding="15">
							<Path Data="{StaticResource ClosingData1}" Fill="White"/>
						</Border>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ClosingButton2">
		<Setter Property="Button.Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Viewbox>
						<Border Background="Black" Padding="10">
							<Path Data="{StaticResource ClosingData2}" Fill="White"/>
						</Border>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style x:Key="{x:Type DatePicker}" TargetType="{x:Type DatePicker}">
		<Setter Property="Foreground" Value="#FF333333" />
		<Setter Property="IsTodayHighlighted" Value="True" />
		<Setter Property="SelectedDateFormat" Value="Short" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
					<GradientStop Color="#FFA3AEB9" Offset="0" />
					<GradientStop Color="#FF8399A9" Offset="0.375" />
					<GradientStop Color="#FF718597" Offset="0.375" />
					<GradientStop Color="#FF617584" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.Resources>
								<SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
								<ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
									<Grid>
										<VisualStateManager.VisualStateGroups>
											<VisualStateGroup x:Name="CommonStates">
												<VisualStateGroup.Transitions>
													<VisualTransition GeneratedDuration="0" />
													<VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
													<VisualTransition GeneratedDuration="0:0:0.1" To="Pressed" />
												</VisualStateGroup.Transitions>
												<VisualState x:Name="Normal" />
												<VisualState x:Name="MouseOver">
													<Storyboard>
														<ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    Storyboard.TargetName="Background" />
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF" />
														</ColorAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Pressed">
													<Storyboard>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                  Storyboard.TargetName="Background">
															<SplineColorKeyFrame KeyTime="0" Value="#FF448DCA" />
														</ColorAnimationUsingKeyFrames>
														<DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="Highlight">
															<SplineDoubleKeyFrame KeyTime="0" Value="1" />
														</DoubleAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF" />
														</ColorAnimationUsingKeyFrames>
														<ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001"
                                                                                  Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                                                  Storyboard.TargetName="BackgroundGradient">
															<SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF" />
														</ColorAnimationUsingKeyFrames>
													</Storyboard>
												</VisualState>
												<VisualState x:Name="Disabled" />
											</VisualStateGroup>
										</VisualStateManager.VisualStateGroups>
										<Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center"
                                          Width="19">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
												<ColumnDefinition Width="20*" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="23*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
												<RowDefinition Height="19*" />
											</Grid.RowDefinitions>
											<Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1"
                                                Opacity="0" Grid.Row="0" Grid.RowSpan="4" />
											<Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5"
                                                Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3" />
											<Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0"
                                                Opacity="1" Grid.Row="1" Grid.RowSpan="3">
												<Border.Background>
													<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
														<GradientStop Color="#FFFFFFFF" Offset="0" />
														<GradientStop Color="#F9FFFFFF" Offset="0.375" />
														<GradientStop Color="#E5FFFFFF" Offset="0.625" />
														<GradientStop Color="#C6FFFFFF" Offset="1" />
													</LinearGradientBrush>
												</Border.Background>
											</Border>
											<Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
												<Rectangle.Fill>
													<LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
														<GradientStop Color="#FF4084BD" />
														<GradientStop Color="#FFAFCFEA" Offset="1" />
													</LinearGradientBrush>
												</Rectangle.Fill>
												<Rectangle.Stroke>
													<LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
														<GradientStop Color="#FF494949" />
														<GradientStop Color="#FF9F9F9F" Offset="1" />
													</LinearGradientBrush>
												</Rectangle.Stroke>
											</Rectangle>
											<Path Grid.ColumnSpan="4" Grid.Column="0"
                                              Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                              Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill" VerticalAlignment="Center" />
											<Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center"
                                                 Width="3" />
											<Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0"
                                                Grid.Row="0" Grid.RowSpan="4" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,0,3,0"
                                Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Width="20" Height="20" MinWidth="20" MinHeight="20" />
							<DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding Focusable}"
                                           HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
							<Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1" />
								<Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19" />
								<Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>